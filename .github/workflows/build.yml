name: Build
on:
  push:
    
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2

    - name: Setup MSBuild (vswhere-path)
      id: setup_msbuild_explicit
      uses: ./
      with:
        vswhere-path: C:\ProgramData\chocolatey\bin

    - name: Setup MSBuild (PATH)
      id: setup_msbuild_path
      uses: ./

    - name: Setup MSBuild (fallback)
      id: setup_msbuild_fallback
      uses: ./
      env:
        PATH: ''

    - name: Setup MSBuild (x64)
      id: setup_msbuild_path2
      uses: ./
      with:
        vs-prerelease: true
        msbuild-architecture: 'x64'

    - name: echo msbuild path
      run: |
        echo "vswhere-path: ${{ steps.setup_msbuild_explicit.outputs.msbuildPath }}"
        echo "PATH: ${{ steps.setup_msbuild_path.outputs.msbuildPath }}"
        echo "Fallback: ${{ steps.setup_msbuild_fallback.outputs.msbuildPath2 }}"
    - name: echo MSBuild
      run: msbuild -version
    
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 1.11
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~\sonar\cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    - name: Cache SonarCloud scanner
      id: cache-sonar-scanner
      uses: actions/cache@v1
      with:
        path: .\.sonar\scanner
        key: ${{ runner.os }}-sonar-scanner
        restore-keys: ${{ runner.os }}-sonar-scanner
    - name: Install SonarCloud scanner
      if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
      shell: powershell
      run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
    - name: Build and analyze
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      shell: powershell
      run: |
        .\.sonar\scanner\dotnet-sonarscanner begin /k:"minesweep" /o:"syncltu" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
        msbuild /t:Rebuild
        .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
          